language: python

python:
  - 3.7

services:
  - docker

before_install:
  - if [[ "$TRAVIS_BRANCH" == "master" ]]; then
      VERSION=latest;
    else
      VERSION=$TRAVIS_BRANCH;
    fi

  # Default variables (used by Jenkins)
  - '[[ -z "$DOCKERFILE" ]] && export DOCKERFILE=Dockerfile'
  - '[[ -z "$IMAGE" ]] && export IMAGE=test'
  - '[[ -z "$ARCH" ]] && export ARCH=x86_64'
  - '[[ -z "$VERSION" ]] && export VERSION=jenkins'

install:
  - docker build -f "$DOCKERFILE" -t codait/max-object-detector:"$IMAGE"-"$ARCH"-"$VERSION" .
  - docker run -it -d --rm -p 5000:5000 codait/max-object-detector:"$IMAGE"-"$ARCH"-"$VERSION"
  - pip install -r requirements-test.txt

before_script:
  - flake8 . --max-line-length=127 --exclude utils/,protos/,training/training_code/
  - sleep 30

script:
  - pytest tests/test.py

after_success:
  - if [[ "$IMAGE" != "test" && "$TRAVIS_PULL_REQUEST" == "false" ]] && [[ "$TRAVIS_BRANCH" == "master" || "$TRAVIS_BRANCH" == "$TRAVIS_TAG" ]]; then
      echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin;
      docker push codait/max-object-detector:"$IMAGE"-"$ARCH"-"$VERSION";
    fi

matrix:
  include:
  - os: linux
    env: DOCKERFILE=Dockerfile IMAGE=test ARCH=x86_64
  - os: linux
    arch: arm64
    env: DOCKERFILE=Dockerfile.arm32v7 IMAGE=arm ARCH=arm32v7
